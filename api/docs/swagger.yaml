basePath: /api/v1
definitions:
  address.AddressResponse:
    properties:
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      id:
        type: string
      postal_code:
        type: string
      state:
        type: string
      street:
        type: string
      updated_at:
        type: string
    required:
    - created_at
    - id
    - updated_at
    type: object
  address.CreateAddressRequest:
    properties:
      city:
        type: string
      country:
        type: string
      postal_code:
        type: string
      state:
        type: string
      street:
        type: string
    required:
    - city
    - country
    - postal_code
    - state
    - street
    type: object
  address.UpdateAddressRequest:
    properties:
      city:
        type: string
      country:
        type: string
      postal_code:
        type: string
      state:
        type: string
      street:
        type: string
    required:
    - city
    - country
    - postal_code
    - state
    - street
    type: object
  dto.CreateRestaurantRequest:
    properties:
      address:
        $ref: '#/definitions/address.CreateAddressRequest'
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      website:
        type: string
    required:
    - email
    - name
    - phone
    type: object
  dto.RestaurantResponse:
    properties:
      address:
        $ref: '#/definitions/address.AddressResponse'
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      status:
        type: integer
      updated_at:
        type: string
      website:
        type: string
    required:
    - created_at
    - email
    - name
    - phone
    - status
    - updated_at
    type: object
  dto.UpdateRestaurantRequest:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      status:
        type: string
      website:
        type: string
    type: object
  product.CreateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      restaurant_id:
        type: string
    required:
    - description
    - name
    - price
    - restaurant_id
    type: object
  product.ProductResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
      restaurant_id:
        type: string
      updated_at:
        type: string
    required:
    - created_at
    - description
    - id
    - name
    - price
    - restaurant_id
    - updated_at
    type: object
  product.UpdateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      restaurant_id:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the REST API for managing restaurants & products.
  title: Restaurant API
  version: "1.0"
paths:
  /address:
    post:
      consumes:
      - application/json
      description: Receives address details and creates a new record for a restaurant.
      parameters:
      - description: Address to create
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/address.CreateAddressRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/address.AddressResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new address
      tags:
      - addresses
  /address/{id}:
    delete:
      description: Deletes the address identified by the given address ID.
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Address not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an address by ID
      tags:
      - addresses
    get:
      description: Retrieves the address identified by the given address ID.
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/address.AddressResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Address not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get an address by ID
      tags:
      - addresses
    put:
      consumes:
      - application/json
      description: Updates the address identified by the given address ID.
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated address data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/address.UpdateAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/address.AddressResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Address not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an address by ID
      tags:
      - addresses
  /address/restaurant/{restaurant_id}:
    get:
      description: Retrieves the address associated with the given restaurant ID.
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/address.AddressResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Address not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get an address by restaurant ID
      tags:
      - addresses
  /ping:
    get:
      responses: {}
      tags:
      - Health
  /product:
    post:
      consumes:
      - application/json
      description: Receives product details and creates a new record.
      parameters:
      - description: Product to create
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/product.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/product.ProductResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new product
      tags:
      - products
  /product/{id}:
    delete:
      description: Deletes the product identified by the given ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a product by ID
      tags:
      - products
    get:
      description: Retrieves the product identified by the given ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.ProductResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Updates the product identified by the given ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated product data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/product.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.ProductResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a product by ID
      tags:
      - products
  /products:
    get:
      description: Retrieves a paginated list of products.
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all products
      tags:
      - products
  /restaurant:
    post:
      consumes:
      - application/json
      description: Receives restaurant details and creates a new record.
      parameters:
      - description: Restaurant to create
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRestaurantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RestaurantResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new restaurant
      tags:
      - restaurants
  /restaurant/{id}:
    delete:
      description: Deletes the restaurant identified by the given ID.
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Restaurant not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a restaurant by ID
      tags:
      - restaurants
    get:
      description: Retrieves the restaurant identified by the given ID.
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RestaurantResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Restaurant not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a restaurant by ID
      tags:
      - restaurants
    put:
      consumes:
      - application/json
      description: Updates the restaurant identified by the given ID.
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated restaurant data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRestaurantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RestaurantResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Restaurant not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a restaurant by ID
      tags:
      - restaurants
  /restaurants:
    get:
      description: Retrieves a paginated list of restaurants.
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all restaurants
      tags:
      - restaurants
swagger: "2.0"
